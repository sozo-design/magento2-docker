version: '2.1'
services:
  db:
    hostname: "db.${LOCAL_DOMAIN}"
    image: 'percona:5.7'
    environment:
      - "MYSQL_ROOT_PASSWORD=${DB_PASSWORD}"
      - "MYSQL_DATABASE=${DB_DATABASE}"
      - "MYSQL_USER=${DB_USERNAME}"
      - "MYSQL_PASSWORD=${DB_PASSWORD}"
    ports:
      - "3306:3306"
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
      - 'mymagento-magento-db:/var/lib/mysql'
      - './docker/DB/setup.sql:/docker-entrypoint-initdb.d/01-setup.sql'
    healthcheck:
      test: 'mysqladmin ping -uroot -pmagento2 -h localhost'
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - "db.${LOCAL_DOMAIN}"

  redis:
    hostname: "redis.${LOCAL_DOMAIN}"
    image: 'redis:5.0'
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
    ports:
      - 6379
    sysctls:
      net.core.somaxconn: 1024
    healthcheck:
      test: 'redis-cli ping || exit 1'
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - "redis.${LOCAL_DOMAIN}"

  elasticsearch:
    hostname: "elasticsearch.${LOCAL_DOMAIN}"
    image: elasticsearch:7.17.3
    environment:
      - "discovery.type=single-node"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      magento:
        aliases:
          - "elasticsearch.${LOCAL_DOMAIN}"

  fpm:
    hostname: "fpm.${LOCAL_DOMAIN}"
    build:
      context: 'docker/PHP/'
      args:
        USER_ID: ${USER_ID:-0}
        GROUP_ID: ${GROUP_ID:-0}
    extends: generic
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
      - './environments:/environments'
      - './dev/composerTidy.js:/dev/composerTidy.js'
      - './environments/docker/app/etc/config.php:/app/app/etc/config.php'
      - './environments/docker/app/etc/env.php:/app/app/etc/env.php'
      - './environments/docker/wp/wp-config.php:/app/wp/wp-config.php'
    environment:
      - UPSTREAM_HOST=fpm
      - UPSTREAM_PORT=9000
    networks:
      magento:
        aliases:
          - "fpm.${LOCAL_DOMAIN}"
    depends_on:
      db:
        condition: service_healthy

  #  cron:
  #    hostname: "cron.${LOCAL_DOMAIN}"
  #    build:
  #      context: 'docker/cron/'
  #      args:
  #        USER_ID: ${USER_ID:-0}
  #        GROUP_ID: ${GROUP_ID:-0}
  #    extends: generic
  #    volumes:
  #      - 'mymagento-magento-sync:/app:delegated'
  #      - './environments/docker/app/etc/config.php:/app/app/etc/config.php'
  #      - './environments/docker/app/etc/env.php:/app/app/etc/env.php'
  #      - './environments/docker/wp/wp-config.php:/app/wp/wp-config.php'
  #    networks:
  #      magento:
  #        aliases:
  #          - "cron.${LOCAL_DOMAIN}"
  #    depends_on:
  #      db:
  #        condition: service_healthy

  web:
    hostname: "web.${LOCAL_DOMAIN}"
    #image: 'magento/magento-cloud-docker-nginx:latest-1.1'
    build: 'docker/Web/'
    extends: generic
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
    environment:
      - "VIRTUAL_HOST=${LOCAL_DOMAIN}"
      - VIRTUAL_PORT=80
      - UPSTREAM_HOST=web
      - UPSTREAM_PORT=80
      - HTTPS_METHOD=noredirect
      - MAGENTO_RUN_MODE=developer
      - DEBUG=false
      - WITH_XDEBUG=0
#      - UPLOAD_MAX_FILESIZE=64M
#      - FPM_HOST=fpm
#      - FPM_PORT=9000
#      - MAGENTO_ROOT=/app
#      - UPSTREAM_HOST=web
#      - UPSTREAM_PORT=8080
#      - MFTF_UTILS=0
      - NGINX_WORKER_PROCESSES=1
      - NGINX_WORKER_CONNECTIONS=1024
    ports:
      - '8080:8080'
    networks:
      magento:
        aliases:
          - "web.${LOCAL_DOMAIN}"
    healthcheck:
      test: exit 0
      interval: 30s
      timeout: 30s
      retries: 3
    depends_on:
      fpm:
        condition: service_started

  tls:
    hostname: "tls.${LOCAL_DOMAIN}"
    build: 'docker/Tls/'
    extends: generic
    volumes:
      - 'mymagento-magento-sync:/app:delegated'
    networks:
      magento:
        aliases:
          - "${LOCAL_DOMAIN}"
    environment:
      - NGINX_WORKER_PROCESSES=1
      - NGINX_WORKER_CONNECTIONS=1024
      - UPSTREAM_HOST=web
      - UPSTREAM_PORT=8080
      - WITH_XDEBUG=0
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      web:
        condition: service_started
#        varnish:
#          condition: service_started

  #  varnish:
  #    hostname: "varnish.${LOCAL_DOMAIN}"
  #    image: 'magento/magento-cloud-docker-varnish:6.2'
  #    networks:
  #      magento:
  #        aliases:
  #          - "${LOCAL_DOMAIN}"
  #    volumes:
  #      - './docker/Varnish/default.vcl:/etc/varnish/default.vcl'
  #    depends_on:
  #      web:
  #        condition: service_healthy

  generic:
    hostname: "generic.${LOCAL_DOMAIN}"
#    image: 'alpine:latest'
    build: 'docker/Generic/'
    env_file: ./docker/config.env
    environment:
      - MAGENTO_RUN_MODE=developer
      - 'PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip sodium redis xsl blackfire'

  fpm_xdebug:
    hostname: "fpm_xdebug.${LOCAL_DOMAIN}"
    image: 'magento/magento-cloud-docker-php:7.2-fpm-1.2'
    extends: generic
    ports:
      - '9001:9001'
    volumes:
      -  'mymagento-magento-sync:/app'
    environment:
      - 'PHP_EXTENSIONS=bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip redis xsl sodium xdebug'
      - XDEBUG_CONFIG=remote_host=host.docker.internal remote_autostart=On remote_enable=On idekey=XDEBUG remote_log=/tmp/xdebug.log remote_port=9000
    networks:
      magento:
        aliases:
          - "fpm_xdebug.${LOCAL_DOMAIN}"
    depends_on:
      db:
        condition: service_started

  mailhog:
    hostname: "mailhog.${LOCAL_DOMAIN}"
    image: 'mailhog/mailhog:latest'
    ports:
      - '1025:1025'
      - '8025:8025'
    networks:
      magento:
        aliases:
          - "mailhog.${LOCAL_DOMAIN}"

volumes:
  mymagento-magento-sync:
    driver_opts:
      type: none
      device: ${PWD}/magento
      #device: '${PWD}'
      o: bind
  mymagento-magento-db: {  }
networks:
  magento:
    driver: bridge
