#!/bin/bash
set -o errexit

# Generate a new local CA "/root/.local/share/mkcert"
docker compose exec -T -u root app mkcert -install

docker cp "$(docker compose --env-file=./.docker/config.env ps -q tls|awk '{print $1}')":/root/.local/share/mkcert/rootCA.pem .

echo "System password requested to install certificate authority on host..."

if [ "$(uname)" == "Darwin" ]; then
    sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain rootCA.pem

    # Check if Firefox is installed
    FFoxBin="/Application/Firefox.app/Contents/MacOS/firefox-bin"
    if [ -f "$FFoxBin" ]; then
        echo "{\"policies\": {\"Certificates\": {\"ImportEnterpriseRoots\": true}}}" | sudo tee policies.json

        ### Check if distribution directory exists
        DistDirectory="/Applications/Firefox.app/Contents/Resources/distribution"
        if [ ! -d "$DistDirectory" ]; then
            sudo mkdir "$DistDirectory"
        fi
        ### Move the newly created policies.json to the Certificates directory
        sudo mv policies.json "$DistDirectory"/policies.json

        ### Check if Certificates directory exists
        CertDirectory="/Library/Application Support/Mozilla/Certificates"
        if [ ! -d "$CertDirectory" ]; then
            sudo mkdir "$CertDirectory"
        fi

        ### Move the newly created .pem to the Certificates directory
        sudo mv rootCA.pem "$CertDirectory"/rootCA.pem
    else
        sudo rm rootCA.pem
    fi

else

    ### Requirement: apt install ca-certificates
    REQUIRED_PKG="ca-certificates"
    PKG_OK=$(dpkg-query -W --showformat='${Status}\n' $REQUIRED_PKG|grep "install ok installed")
    echo Checking for $REQUIRED_PKG: "$PKG_OK"
    if [ "" = "$PKG_OK" ]; then
        echo "No $REQUIRED_PKG found. Setting up $REQUIRED_PKG."
        sudo apt-get --yes install $REQUIRED_PKG
    fi

    ### CA file to install (CUSTOMIZE!)
    certfile="rootCA.pem"
    certname="SOZO CA"

    ### For cert8 (legacy - DBM)
    find ~/ -name "cert8.db" -print0 | while read -r certDB
    do
        certdir=$(dirname "${certDB}");
        certutil -D -n "${certname}" -i ${certfile} -d dbm:"${certdir}"
        certutil -A -n "${certname}" -t "TCu,Cu,Tu" -i ${certfile} -d dbm:"${certdir}"
    done

    ### For cert9 (SQL)
    find ~/ -name "cert9.db" -print0 | while read -r certDB
    do
        certdir=$(dirname "${certDB}");
        certutil -D -n "${certname}" -i ${certfile} -d sql:"${certdir}"
        certutil -A -n "${certname}" -t "TCu,Cu,Tu" -i ${certfile} -d sql:"${certdir}"
    done

    sudo mv rootCA.pem /usr/local/share/ca-certificates/sozocacert.crt
    sudo update-ca-certificates

    if ($(awk -v cmd='openssl x509 -noout -subject' '/BEGIN/{close(cmd)};{print | cmd}' < /etc/ssl/certs/ca-certificates.crt | grep -q SOZO)); then
        echo "SOZO Root CA Installed!"
    fi
fi